type Query {
    luiism(luiismId: ID!): Luiism
    randomLuiism: Luiism!
    # allLuiisms: [Luiism!]!
}

type Mutation {
    # createUser(name: String!): User
    createLuiism(value: String!, definition: String!, submittedById: ID): Luiism
    # favouriteLuiism(user: ID!, luiism: ID!): Luiism
}

type User {
    id: ID!
    name: String!
    submissions: [Luiism!]!
    favourites: [Luiism!]!
}

type Luiism {
    id: ID!
    value: String!
    definition: String!
    submittedBy: User
    favouritedBy: [User!]!
}
